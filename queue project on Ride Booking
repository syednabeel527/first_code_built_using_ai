Ride Booking System Simulation:
from collections import deque

class RideBookingSystem:
    def __init__(self):
        self.queue = deque()

    def book_ride(self, name, destination):
        self.queue.append({"name": name, "destination": destination})
        print(f">> Ride booked for {name} to {destination}.\n")

    def assign_ride(self):
        if not self.queue:
            print(">> No customers in the queue.\n")
        else:
            customer = self.queue.popleft()
            print(f">> Ride assigned to {customer['name']} to {customer['destination']}.\n")

    def show_queue(self):
        if not self.queue:
            print(">> The queue is empty.\n")
        else:
            print("Current queue:")
            for i, customer in enumerate(self.queue, start=1):
                print(f"{i}. {customer['name']} - {customer['destination']}")
            print()

def main():
    system = RideBookingSystem()

    while True:
        print("1. Book a ride")
        print("2. Assign a ride")
        print("3. Show queue")
        print("4. Exit")
        choice = input("Choose an option: ")

        if choice == "1":
            name = input("Enter customer name: ")
            destination = input("Enter destination: ")
            system.book_ride(name, destination)
        elif choice == "2":
            system.assign_ride()
        elif choice == "3":
            system.show_queue()
        elif choice == "4":
            print("Exiting system. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.\n")

if __name__ == "__main__":
    main()
